import { useState } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';
import { Separator } from '@/components/ui/separator';
import { Textarea } from '@/components/ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import Icon from '@/components/ui/icon';
import { useToast } from '@/hooks/use-toast';

interface CartItem {
  id: number;
  name: string;
  price: number;
  image: string;
  quantity: number;
  selectedSize: string;
}

export default function Checkout() {
  const navigate = useNavigate();
  const location = useLocation();
  const { toast } = useToast();
  const cart: CartItem[] = location.state?.cart || [];
  
  const [formData, setFormData] = useState({
    fullName: '',
    phone: '',
    email: '',
    address: '',
    city: '',
    postalCode: '',
    apartment: '',
    floor: '',
    entrance: '',
    comment: '',
    paymentMethod: 'card',
    deliveryMethod: 'courier',
    deliveryTime: 'anytime'
  });

  const totalPrice = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);
  const deliveryPrice = formData.deliveryMethod === 'courier' ? 500 : formData.deliveryMethod === 'express' ? 1500 : 0;
  const finalPrice = totalPrice + deliveryPrice;

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!formData.fullName || !formData.phone || !formData.email || !formData.address || !formData.city) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è",
        variant: "destructive"
      });
      return;
    }

    toast({
      title: "–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω! üéâ",
      description: `–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É ${formData.phone}`,
    });

    setTimeout(() => navigate('/'), 2000);
  };

  if (cart.length === 0) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-purple-50 via-pink-50 to-orange-50 flex items-center justify-center">
        <Card className="max-w-md">
          <CardContent className="p-12 text-center">
            <Icon name="ShoppingBag" size={64} className="mx-auto text-muted-foreground mb-4" />
            <h2 className="text-2xl font-bold mb-2">–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</h2>
            <p className="text-muted-foreground mb-6">–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞</p>
            <Button onClick={() => navigate('/')} className="bg-gradient-to-r from-primary to-secondary">
              –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥
            </Button>
          </CardContent>
        </Card>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-50 via-pink-50 to-orange-50">
      <header className="bg-white/80 backdrop-blur-lg border-b border-border shadow-sm sticky top-0 z-50">
        <div className="container mx-auto px-4 py-4">
          <Button variant="ghost" onClick={() => navigate('/')} className="gap-2">
            <Icon name="ArrowLeft" size={20} />
            –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–∞–≥–∞–∑–∏–Ω
          </Button>
        </div>
      </header>

      <main className="container mx-auto px-4 py-8">
        <h1 className="text-4xl font-black mb-8 bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent">
          –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
        </h1>

        <div className="grid lg:grid-cols-3 gap-8">
          <div className="lg:col-span-2 space-y-6">
            <Card className="animate-fade-in">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Icon name="User" size={24} />
                  –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="grid md:grid-cols-2 gap-4">
                  <div>
                    <Label htmlFor="fullName">–ü–æ–ª–Ω–æ–µ –∏–º—è *</Label>
                    <Input
                      id="fullName"
                      placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
                      value={formData.fullName}
                      onChange={(e) => setFormData({ ...formData, fullName: e.target.value })}
                      className="mt-1"
                    />
                  </div>
                  <div>
                    <Label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω *</Label>
                    <Input
                      id="phone"
                      placeholder="+7 (999) 123-45-67"
                      value={formData.phone}
                      onChange={(e) => setFormData({ ...formData, phone: e.target.value })}
                      className="mt-1"
                    />
                  </div>
                </div>
                <div>
                  <Label htmlFor="email">Email *</Label>
                  <Input
                    id="email"
                    type="email"
                    placeholder="example@mail.com"
                    value={formData.email}
                    onChange={(e) => setFormData({ ...formData, email: e.target.value })}
                    className="mt-1"
                  />
                </div>
              </CardContent>
            </Card>

            <Card className="animate-fade-in" style={{ animationDelay: '100ms' }}>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Icon name="MapPin" size={24} />
                  –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="grid md:grid-cols-2 gap-4">
                  <div>
                    <Label htmlFor="city">–ì–æ—Ä–æ–¥ *</Label>
                    <Input
                      id="city"
                      placeholder="–ú–æ—Å–∫–≤–∞"
                      value={formData.city}
                      onChange={(e) => setFormData({ ...formData, city: e.target.value })}
                      className="mt-1"
                    />
                  </div>
                  <div>
                    <Label htmlFor="postalCode">–ò–Ω–¥–µ–∫—Å</Label>
                    <Input
                      id="postalCode"
                      placeholder="123456"
                      value={formData.postalCode}
                      onChange={(e) => setFormData({ ...formData, postalCode: e.target.value })}
                      className="mt-1"
                    />
                  </div>
                </div>
                <div>
                  <Label htmlFor="address">–£–ª–∏—Ü–∞ –∏ –¥–æ–º *</Label>
                  <Input
                    id="address"
                    placeholder="—É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 10"
                    value={formData.address}
                    onChange={(e) => setFormData({ ...formData, address: e.target.value })}
                    className="mt-1"
                  />
                </div>
                <div className="grid grid-cols-3 gap-4">
                  <div>
                    <Label htmlFor="apartment">–ö–≤–∞—Ä—Ç–∏—Ä–∞</Label>
                    <Input
                      id="apartment"
                      placeholder="5"
                      value={formData.apartment}
                      onChange={(e) => setFormData({ ...formData, apartment: e.target.value })}
                      className="mt-1"
                    />
                  </div>
                  <div>
                    <Label htmlFor="floor">–≠—Ç–∞–∂</Label>
                    <Input
                      id="floor"
                      placeholder="3"
                      value={formData.floor}
                      onChange={(e) => setFormData({ ...formData, floor: e.target.value })}
                      className="mt-1"
                    />
                  </div>
                  <div>
                    <Label htmlFor="entrance">–ü–æ–¥—ä–µ–∑–¥</Label>
                    <Input
                      id="entrance"
                      placeholder="2"
                      value={formData.entrance}
                      onChange={(e) => setFormData({ ...formData, entrance: e.target.value })}
                      className="mt-1"
                    />
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card className="animate-fade-in" style={{ animationDelay: '200ms' }}>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Icon name="Truck" size={24} />
                  –°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <RadioGroup value={formData.deliveryMethod} onValueChange={(value) => setFormData({ ...formData, deliveryMethod: value })}>
                  <div className="flex items-center space-x-2 p-4 border rounded-lg hover:bg-muted/50 cursor-pointer">
                    <RadioGroupItem value="courier" id="courier" />
                    <Label htmlFor="courier" className="flex-1 cursor-pointer">
                      <div className="font-semibold flex items-center gap-2">
                        <Icon name="Bike" size={18} />
                        –ö—É—Ä—å–µ—Ä—Å–∫–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞
                      </div>
                      <div className="text-sm text-muted-foreground">3-5 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π ‚Ä¢ 500 ‚ÇΩ</div>
                    </Label>
                  </div>
                  <div className="flex items-center space-x-2 p-4 border rounded-lg hover:bg-muted/50 cursor-pointer">
                    <RadioGroupItem value="pickup" id="pickup" />
                    <Label htmlFor="pickup" className="flex-1 cursor-pointer">
                      <div className="font-semibold flex items-center gap-2">
                        <Icon name="Store" size={18} />
                        –°–∞–º–æ–≤—ã–≤–æ–∑
                      </div>
                      <div className="text-sm text-muted-foreground">–ì–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ —á–µ—Ä–µ–∑ 1-2 –¥–Ω—è ‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω–æ</div>
                    </Label>
                  </div>
                  <div className="flex items-center space-x-2 p-4 border rounded-lg hover:bg-muted/50 cursor-pointer">
                    <RadioGroupItem value="express" id="express" />
                    <Label htmlFor="express" className="flex-1 cursor-pointer">
                      <div className="font-semibold flex items-center gap-2">
                        <Icon name="Zap" size={18} className="text-orange-500" />
                        –≠–∫—Å–ø—Ä–µ—Å—Å-–¥–æ—Å—Ç–∞–≤–∫–∞
                      </div>
                      <div className="text-sm text-muted-foreground">–í —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ ‚Ä¢ 1500 ‚ÇΩ</div>
                    </Label>
                  </div>
                </RadioGroup>
                
                {formData.deliveryMethod === 'courier' || formData.deliveryMethod === 'express' ? (
                  <div>
                    <Label htmlFor="deliveryTime">–£–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏</Label>
                    <Select value={formData.deliveryTime} onValueChange={(value) => setFormData({ ...formData, deliveryTime: value })}>
                      <SelectTrigger className="mt-1">
                        <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="anytime">–õ—é–±–æ–µ –≤—Ä–µ–º—è</SelectItem>
                        <SelectItem value="morning">–£—Ç—Ä–æ (9:00 - 12:00)</SelectItem>
                        <SelectItem value="afternoon">–î–µ–Ω—å (12:00 - 15:00)</SelectItem>
                        <SelectItem value="evening">–í–µ—á–µ—Ä (15:00 - 18:00)</SelectItem>
                        <SelectItem value="late">–ü–æ–∑–¥–Ω–∏–π –≤–µ—á–µ—Ä (18:00 - 21:00)</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                ) : null}
              </CardContent>
            </Card>

            <Card className="animate-fade-in" style={{ animationDelay: '250ms' }}>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Icon name="MessageSquare" size={24} />
                  –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É
                </CardTitle>
              </CardHeader>
              <CardContent>
                <Textarea
                  placeholder="–£–∫–∞–∂–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è: –∫–æ–¥ –¥–æ–º–æ—Ñ–æ–Ω–∞, –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ–¥—ä–µ–∑–¥–∞ –∏ —Ç.–¥."
                  value={formData.comment}
                  onChange={(e) => setFormData({ ...formData, comment: e.target.value })}
                  rows={4}
                />
              </CardContent>
            </Card>

            <Card className="animate-fade-in" style={{ animationDelay: '300ms' }}>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Icon name="CreditCard" size={24} />
                  –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
                </CardTitle>
              </CardHeader>
              <CardContent>
                <RadioGroup value={formData.paymentMethod} onValueChange={(value) => setFormData({ ...formData, paymentMethod: value })}>
                  <div className="flex items-center space-x-2 p-4 border rounded-lg hover:bg-muted/50 cursor-pointer">
                    <RadioGroupItem value="card" id="card" />
                    <Label htmlFor="card" className="flex-1 cursor-pointer">
                      <div className="font-semibold">–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞</div>
                      <div className="text-sm text-muted-foreground">Visa, MasterCard, –ú–∏—Ä</div>
                    </Label>
                  </div>
                  <div className="flex items-center space-x-2 p-4 border rounded-lg hover:bg-muted/50 cursor-pointer">
                    <RadioGroupItem value="cash" id="cash" />
                    <Label htmlFor="cash" className="flex-1 cursor-pointer">
                      <div className="font-semibold">–ù–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏</div>
                      <div className="text-sm text-muted-foreground">–û–ø–ª–∞—Ç–∞ –∫—É—Ä—å–µ—Ä—É –∏–ª–∏ –≤ –ø—É–Ω–∫—Ç–µ –≤—ã–¥–∞—á–∏</div>
                    </Label>
                  </div>
                </RadioGroup>
              </CardContent>
            </Card>
          </div>

          <div>
            <Card className="sticky top-24 animate-fade-in" style={{ animationDelay: '400ms' }}>
              <CardHeader>
                <CardTitle>–í–∞—à –∑–∞–∫–∞–∑</CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="space-y-3 max-h-[300px] overflow-y-auto pr-2">
                  {cart.map((item) => (
                    <div key={`${item.id}-${item.selectedSize}`} className="flex gap-3">
                      <img 
                        src={item.image} 
                        alt={item.name}
                        className="w-16 h-16 object-cover rounded-lg"
                      />
                      <div className="flex-1 min-w-0">
                        <p className="font-semibold text-sm truncate">{item.name}</p>
                        <p className="text-xs text-muted-foreground">
                          –†–∞–∑–º–µ—Ä: {item.selectedSize} √ó {item.quantity}
                        </p>
                        <p className="text-sm font-bold text-primary">
                          {(item.price * item.quantity).toLocaleString('ru-RU')} ‚ÇΩ
                        </p>
                      </div>
                    </div>
                  ))}
                </div>

                <Separator />

                <div className="space-y-2">
                  <div className="flex justify-between text-sm">
                    <span>–¢–æ–≤–∞—Ä—ã ({cart.reduce((sum, item) => sum + item.quantity, 0)} —à—Ç)</span>
                    <span>{totalPrice.toLocaleString('ru-RU')} ‚ÇΩ</span>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span>–î–æ—Å—Ç–∞–≤–∫–∞</span>
                    <span>{deliveryPrice > 0 ? `${deliveryPrice} ‚ÇΩ` : '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ'}</span>
                  </div>
                </div>

                <Separator />

                <div className="flex justify-between text-xl font-bold">
                  <span>–ò—Ç–æ–≥–æ:</span>
                  <span className="text-primary">{finalPrice.toLocaleString('ru-RU')} ‚ÇΩ</span>
                </div>

                <Button 
                  className="w-full h-12 text-lg bg-gradient-to-r from-primary to-secondary hover:opacity-90"
                  onClick={handleSubmit}
                >
                  –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
                </Button>

                <p className="text-xs text-center text-muted-foreground">
                  –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                </p>
              </CardContent>
            </Card>
          </div>
        </div>
      </main>
    </div>
  );
}